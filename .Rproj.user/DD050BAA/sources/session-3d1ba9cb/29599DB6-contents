---
title: 'CBC Calgary: The Road Ahead Analysis'
author: "John Santos, for Janet Brown Opinion Research"
date: "`r format(Sys.time(), '%Y-%m-%d')`"
output:
  html_document:
    theme: cerulean
    highlight: tango
    code_folding: hide
    df_print: paged
    fig_width: 7
    fig_height: 5
    fig_align: center
    fig_caption: TRUE
    toc: TRUE
    toc_depth: 3
    number_sections: TRUE     
    toc_float: 
      collapsed: FALSE
  pdf_document: default
  word_document: default
---

<style type="text/css">
.main-container {
  max-width: 80% !important;
  margin: auto;
}
</style>

```{r global-options, echo = FALSE}
knitr::opts_chunk$set(fig.width = 6, fig.height = 4, fig.align="center", fig.path = 'Figs/',
                      echo = FALSE, warning = FALSE, message = FALSE)
```

```{r, sumStats.survey.design function}
# sumStats.survey.design
# note: this isn't *technically* correct, since it doesn't weight the case counts
# but, it'll do for now

sumStats.survey.design <- function(data, vars, byvar=NULL, convertFactors=FALSE){
  if(!inherits(data, "tbl_svy")){
    d <- srvyr::as_survey(data) 
  }else{
    d <- data
  }
  if(convertFactors){
    d %>% mutate(across(all_of(vars), as.numeric))
  }
  if(is.null(byvar)){
    n <- d %>% 
      survey_count()
    nNA <- d %>% 
      mutate(wts = weights(d)) %>% 
      group_by(across(all_of(byvar))) %>% 
      summarise(nwt = sum(.data$wts)) %>% 
      ungroup %>% 
      mutate(nNA = n$n - .data$nwt) 
  }else{
    n <- d %>% 
      group_by(across(all_of(byvar))) %>% 
      survey_count()
    nNA <- d %>% 
      mutate(wts = weights(d)) %>% 
      group_by(across(all_of(byvar))) %>% 
      summarise(nwt = sum(.data$wts)) %>% 
      ungroup %>% 
      mutate(nNA = n$n - .data$nwt) 
  }
  out <- d %>% 
    ungroup %>% 
    group_by(across(all_of(byvar))) %>% 
    summarise(across(all_of(vars), ~list(tibble(
      mean = survey_mean(.x, na.rm=TRUE)$coef,
      sd = survey_sd(.x, na.rm=TRUE)$coef,
      min = survey_quantile(.x, 0, na.rm=TRUE)$`_q00`, 
      q25 = survey_quantile(.x, .25, na.rm=TRUE)$`_q25`, 
      median = survey_quantile(.x, .5, na.rm=TRUE)$`_q50`, 
      q75 = survey_quantile(.x, .75, na.rm=TRUE)$`_q75`, 
      max = survey_quantile(.x, 1, na.rm=TRUE)$`_q100`,
      n = n(),
      nNA = sum(is.na(.x))
    )))) %>% 
    pivot_longer(cols = all_of(vars), names_to = "variable") %>% 
    unnest_wider("value")
  
  out
  
}
```

```{r, weighted PRE function}
svyPRE <- function(obj, ...){
  data <- srvyr::as_survey(obj$survey.design)   # create temporary dataframe for calculations
  data$variables$y <- as.numeric(obj$y)   # add observed outcomes to dataframe
  data$variables$yhat <- as.numeric(plogis(predict(obj)) > .5)   # add predicted outcomes to dataframe
  data$variables$correct <- as.numeric(data$variables$yhat == data$variables$y)   # mark correct classifications
  pmc <- svymean(~y, data)[1]
  pmc <- ifelse(pmc < .5, 1-pmc, pmc)
  pcp <- svymean(~correct,data)[1]
  pre <- (pcp-pmc)/(1-pmc)
  pre_stats <- tribble(
    ~statistic, ~value,
    "proportion correctly classified", pcp,
    "proportion reduction in error", pre)
  pre_stats
}
```


```{r setup chunk}
# Initial setup
library(rio)
library(tidyverse)
library(survey)
library(srvyr)
library(DAMisc)
library(ggplot2)
library(knitr)
library(kableExtra)
theme_set(theme_bw())
setwd("C:/Users/John Santos/Box/Current Projects/22-619 CBC Road Ahead 2022/3 - Data analysis")

# Re-code variables by running external script
source("cbctra2022_dataset_setup.R") 

# Create survey design object
library(survey)
tra_svy <- svydesign(~1, data = tra2022, weights = tra2022$weight, round = 4)

# to export dataset at any time, run:
# forexport <- cbind(rawdata[,1:75], tra_svy$variables)
# forexport <- dplyr::select(forexport, -c(131:133))
# export(forexport, file = "cbctra2022_updated.sav")
# export(forexport, file = "cbctra2022_updated.dta")

# color palettes
jbor_pal <- c("#E04541", # dark red
              "#F5B3B4", # light red
              "#A5E5ED", # light blue
              "#33C7DB" # dark blue
              )
jbor_old4 <- c("#E04541", # dark red
               "#F5B3B4", # light red
               "#A5E5ED", # light blue
               "#0C9EBD" # dark blue
               )
jbor_old5 <- c("#E04541", # dark red
               "#F5B3B4", # light red
               "#c1c1c1", # grey
               "#A5E5ED", # light blue
               "#0C9EBD" # dark blue
               )
# abcolours <- c("#009cde",   # AB Party = light blue
#                "#e23b22",   # Liberal = orange-red
#                "#f37221",   # NDP = orange
#                "#bbbbbb",   # Others = light-mid grey
#                "#184484"    # UCP = navy blue
#                )
```

```{r topline, include = FALSE, eval = FALSE}
# # Topline
# myvars <- names(tra2022)[2:65]
# topline <- NULL
# library(DAMisc)
# for(i in 1:length(myvars)) {
#   topline[[i]] <- xt(data = tra_svy, var = myvars[[i]])
# }
# rm(i)
# names(topline) <- myvars
# # topline
```


# Introduction

In my "advanced analysis," I started with a factor analysis of the beliefs/values questions in QA2 and QA3. This is to extract *latent factors*, which can be thought of as underlying common causes of the patterns we see among all 15 of the questions we asked (that I used). It's a way of simplifying the output, so we can look at 5 variables instead of 15, 

Then, I used these as inputs into a cluster analysis to see if we can find classify Albertans into groups based on their underlying beliefs. There is no right or wrong answer for how many groups we find. But, like in previous years, I settled on 4 groups as a way to balance nuance with simplicity.

Finally, I ran vote choice models to see which variables are most important. 

If I have to summarize my findings succinctly, I'd say a few things:

- Alberta is not conservative. However, it is polarized on a *substantive* level (not just emotional level) in terms of values/beliefs. 
- This is particularly true of the energy-versus-environment values dimension, which is highly predictive of vote choice. 
- The right is contributing to this polarization more than the left because the more right wing Albertans are more to the right than the most left-wing Albertans are to the left.
- Economic conservatism (the extent to which the government should intervene in the economy and distributive issues) is also important, but not nearly as much as the energy/environment question. Other values (populism, western alienation, cultural conservatism) are less important.
- Leadership matters. The more you like a leader, the more likely you are to vote for their party. However, how they matter differs. The average NDP supporter rates Notley at about 7.5/10. The average UCP supporter rates Smith at about 6.3.

# Variables used

There are 19 question items in the question batteries A1 and A2. However, I don't use all of those for the analysis that follows here. The items on the AB Pension Plan (#A2f), the AB Police Force (#A2g), separation (#A2e) and inflation (#A3f) are too policy-focused to be measuring "values", which are more general in nature. The inflation question, while not exactly being about a specific policy on *how* to fight inflation, still throws off the analysis because it is not really left- or right-leaning. While the same might be said about the reducing immigration question, reducing immigration comes loaded with clear ideological meanings, whereas there are both conservative (or, for that matter, progressive) reasons to support doing more (or less) about inflation.

A2.	(I am going to read you / Here is) a list of statements about Alberta. Please indicate whether you strongly agree, somewhat agree, somewhat disagree, or strongly disagree with each statement. 

a)	25 years from now, oil and gas will still be Alberta’s most important industry.
b)	Transition away from oil and gas will be beneficial for Alberta’s economy in the long run.
c)	No matter who’s in charge in Ottawa, other parts of Canada will always be looked after before Alberta.
d)	Canada’s system of equalization payments is unfair to Alberta.
e)	~~Alberta would be better off if it separated.~~
f)	~~Alberta should establish an Alberta Pension Plan to replace the Canadian Pension Plan.~~
g)	~~Alberta should establish an Alberta Police Force that would take over rural policing from the RCMP.~~
h)	Alberta should work toward achieving more independence from the federal government.

A3.	(I am going to read you / Here is) a list of statements about politics in general. Please indicate whether you strongly agree, somewhat agree, somewhat disagree, or strongly disagree with each statement. 

a)	It is better to trust the down-to-earth thinking of ordinary people than experts.
b)	Regardless of which party they are from, politicians lose touch with the people after they are elected.
c)	I am sympathetic to the concerns expressed by the convoy protests in February.
d)	The government should leave it to the private sector to create jobs.
e)	When businesses make a lot of money, everyone benefits, including the poor.
f)	~~The government should do more to protect consumers from inflation and the rising cost of living.~~
g)	We’ve NOT gone too far enough to promote equality in Canada.
h)	Canada should cut the number of immigrants it accepts each year.
i)	More should be done for First Nations and Indigenous people.
j)	Government would make better decisions if it did more direct consultation with the people through referendums and plebiscites.
k)	More should be done to address climate change.

To reduce case attrition and to help the statistical routines "do their thing," we'll pre-process the data by centring, scaling, and transforming (Yeo-Johnson) our variables and then run KNN imputation with 10 neighbours.

```{r recipes}
ds <- tra2022 %>%
  select(c(starts_with("v_")))

library(recipes)
blueprint <- recipe(~ ., data=ds) %>% 
  step_impute_knn(all_numeric(), all_nominal(), neighbors=10) %>%
  step_YeoJohnson(all_numeric()) %>%
  step_scale(all_numeric()) %>%
  step_center(all_numeric()) 
prep_data <- prep(blueprint, ds)
ds_baked <- bake(prep_data, new_data=ds)
```


```{r pca, include = FALSE, eval = FALSE}
mypca <- prcomp(ds_baked)

library(factoextra)
p_scree <- fviz_eig(mypca) +
  scale_y_continuous(limits = c(0,45))
p_scree

tibble(
  "Dimension" = seq(1:10),
  "Eigenvalue" = as.double(mypca$sdev[1:10]),
  "% variance explained" = p_scree$data$eig,
  "Total % variance explained" = cumsum(p_scree$data$eig))

sum(p_scree$data$eig[1:2])
sum(p_scree$data$eig[1:3])
sum(p_scree$data$eig[1:4])


# Biplots with cases
fviz_pca_ind(
  mypca,
  axes = c(1, 2),
  col.ind = tra2022$votegrp, # Color by groups
  # palette = votegrp_colours,
  addEllipses = TRUE, # Concentration ellipses
  ellipse.type = "confidence",
  ellipse.alpha = .2,
  mean.point = TRUE,
  label = "none",
  ) 

fviz_pca_ind(
  mypca,
  axes = c(1, 3),
  col.ind = tra2022$votegrp, # Color by groups
  # palette = votegrp_colours,
  addEllipses = TRUE, # Concentration ellipses
  ellipse.type = "confidence",
  ellipse.alpha = .2,
  mean.point = TRUE,
  label = "none",
  ) 

fviz_pca_ind(
  mypca,
  axes = c(2, 3),
  col.ind = tra2022$votegrp, # Color by groups
  # palette = votegrp_colours,
  addEllipses = TRUE, # Concentration ellipses
  ellipse.type = "confidence",
  ellipse.alpha = .2,
  mean.point = TRUE,
  label = "none",
  ) 


# Biplots without cases
fviz_pca_var(
  mypca,
  axes = c(1, 2),
  col.var = "contrib", # Color by contributions to the PC
  gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
  repel = TRUE     # Avoid text overlapping
  ) + coord_fixed()

fviz_pca_var(
  mypca,
  axes = c(1, 3),
  col.var = "contrib", # Color by contributions to the PC
  gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
  repel = TRUE     # Avoid text overlapping
  ) + coord_fixed()

fviz_pca_var(
  mypca,
  axes = c(2, 3),
  col.var = "contrib", # Color by contributions to the PC
  gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
  repel = TRUE     # Avoid text overlapping
  ) + coord_fixed()

```


```{r, include = FALSE, eval = FALSE}

mysvd <- svd(ds_baked)
mysvd_pct <- mysvd$d^2/sum(mysvd$d^2)
sprintf("%.0f%%", mysvd_pct*100)

V <- mysvd$v[,1:10]
rownames(V) <- names(ds_baked)
V

mysvd_preds <- mysvd$u[,1:2] %*% 
  diag(mysvd$d[1:2]) %*% 
  t(mysvd$v[,1:2])
mysvd_preds <- as.data.frame(mysvd_preds)
mysvd_preds

```





# Factor analysis

```{r test with alternative prep, include = FALSE, eval = FALSE}
library(psych)
# no pre-processing
fact_val_unrot2 <- fa(ds, 3, fm="pa", rotate="none", scores = TRUE)
loadings(fact_val_unrot2)
fact_val_vmax5_2 <- fa(ds, 5, fm="pa", rotate="varimax", scores = TRUE)
loadings(fact_val_vmax5_2)

# only imputation
ds2 <- tra2022 %>%
  select(starts_with("v_"))

library(recipes)
blueprint2 <- recipe(~ ., data=ds2) %>% 
  step_impute_knn(all_numeric(), all_nominal(), neighbors=10) 
prep_data2 <- prep(blueprint2, ds2)
ds2_baked <- bake(prep_data2, new_data=ds2)

library(psych)
fact_val_unrot2 <- fa(ds2_baked, 3, fm="pa", rotate="none", scores = TRUE)
loadings(fact_val_unrot2)
fact_val_vmax5_2 <- fa(ds2_baked, 4, fm="pa", rotate="varimax", scores = TRUE)
loadings(fact_val_vmax5_2)
```

We'll use factor analysis to make sense of the 15 values questions using fewer latent factors. I extracted all five factors that had eigenvalues >1 after varimax rotation. The following tables have the underlying latent factors in the columns and the question items in the rows. The cell entries are *factor loadings*, which are the correlation coefficient between the respective question item and underlying factor.

## Unrotated (can skip)

Looking at the unrotated factor solution can be helpful to get a high-level overview of the patterns in the data. If we don't rotate the factor analysis, there is 1 eigenvalue >1, which suggests that the variation among our 15 values questions could be summarized in a single left-right dimension. The strongest questions that load onto this dimension are the ones on western alienation, the convoy, climate change, and immigration.

```{r}
library(psych)
fact_val_unrot <- fa(ds_baked, 2, fm="pa", rotate="none", scores = TRUE)
loadings(fact_val_unrot)
```

## Varimax rotation 

If we use varimax rotation, there are 5 factors with eigenvalues >1 that, together, explain 53% of the variation.

1. Economic conservatism (trickledown, leavetoprivate) mixed with populism (convoy, autonomy)
2. Populism (downtoearth, directdem, convoy, reduceimmig)
3. Cultural conservatism (moreforindig, moreforclimate, reduceimmig)
4. Western disaffection (othersbefore, equalization, losetouch)
5. Energy/enviro (ogfuture, transition, moreforclimate)

```{r}
fact_val_vmax5 <- fa(ds_baked, 5, fm="pa", rotate="varimax", scores = TRUE)
loadings(fact_val_vmax5)
```

# Cluster analysis using value scales

I use the five latent factors as inputs into the cluster analysis. On purely statistical grounds (i.e. model fit measures), the best-performing model has five clusters, which is a good number that balances nuance with simplicity. 

It might be tempting to go down to four clusters, but that is a bad idea for two reasons. First, the change in model fit (BIC) is actually quite large. Second and more importantly, this glosses over important differences between those clusters.

The big takeaway here is that the NDP "owns" one cluster with 15% of the population. The UCP owns two clusters with a combined 32% of the population. The NDP leads in the two remain clusters that total about about 53% of the population, and they have a 2:1 advantage in these clusters over the UCP. 

Cluster 5 is the most interesting. It has a mix of left and right positions. While half of Cluster 5 currently intends to vote NDP, and about a fifth intend to vote UCP, about 10% apeice intend to vote for one of the other left parties or are "orphaned voters."

```{r}
# Create new dataframe of just factor scores
fa_scores <- tibble(
  f_economic = as.data.frame(fact_val_vmax5$scores)$PA1,
  f_populism = as.data.frame(fact_val_vmax5$scores)$PA2,
  f_cultural = as.data.frame(fact_val_vmax5$scores)$PA3,
  f_western = as.data.frame(fact_val_vmax5$scores)$PA4,
  f_energyenviro = as.data.frame(fact_val_vmax5$scores)$PA5)
# summary(fa_scores)

# While we're at it, add the factor scores to the dataset
tra_svy$variables <- tra_svy$variables %>%
  add_column(f_economic = as.data.frame(fact_val_vmax5$scores)$PA1) %>%
  add_column(f_populism = as.data.frame(fact_val_vmax5$scores)$PA2) %>%
  add_column(f_cultural = as.data.frame(fact_val_vmax5$scores)$PA3) %>%
  add_column(f_western = as.data.frame(fact_val_vmax5$scores)$PA4) %>%
  add_column(f_energyenviro = as.data.frame(fact_val_vmax5$scores)$PA5)
tra_svy$variables$z_ideol <- scale(tra_svy$variables$ideology)

library(mclust)
set.seed(2022)
mbc_vmax5 <- Mclust(fa_scores)
plot(mbc_vmax5, what="BIC")
# plot(mbc_vmax5, what="classification")
# plot(mbc_vmax5, what="uncertainty")
# plot(mbc_vmax5, what="density")
```

```{r}
# library(tidyverse)
# library(ggplot2)

# Run model for G=5 VVE 
set.seed(2022)
g5vve <- Mclust(fa_scores, G=5, modelNames="VVE")

# Run model for G=4 VVE 
set.seed(2022)
g4vee <- Mclust(fa_scores, G=4, modelNames="VEE")

# Add cluster classifications to dataset
tra_svy$variables$g5vve <- g5vve$classification
tra_svy$variables$g4vee <- g4vee$classification
```

```{r g5 classif plot, fig.width = 6, fig.height = 6, include = FALSE, eval = FALSE}

# This is a graphical representation of what the four clusters look like in terms of pairwise comparisons between the five dimensions # used for classification. 
# 
# One diagonal lists the factors. Perhaps counter-intuitively, the plots in the same **column** of a variable have that variable on the # **x-axis** Conversely, the plots in the same *row* of a variable have that variable on the *y-axis*. (I.e. the plot in the top right # corner has **populism** on the **y-axis** and *energy/environment* on the *x-axis*) 
# 
# In each plot, the bottom left corner is the most left-wing position on the two dimensions and the top right corner is the most # right-wing position. 
# 
# 
# There is a lot going on, but the things to focus on are:
# 
# - The dimensions of western alienation, economic conservatism, cultural conservatism, and energy/environment are fairly correlated # with each other to form a unidimensional left-right spectrum. This is denoted by the tight oval shape of dots scattered around the # bottom-left to top-right diagonal.
# - The dimension that is the odd one out is populism, which doesn't correlate as well with the other four dimensions. Instead of a # tight oval, it forms a wide rhombus shape when compared against the other dimensions.
# - Within the "common left-right spectrum" spanning the bottom-left to top-right is a clear distinction between a left cluster (green) # and right cluster (purple).
# - There is a "true centrist" cluster (blue) that is in-between green and purple across all dimensions. 
# - The red cluster is centrist on most dimensions except for populism, where it is solidly populist.


# g4eve_pal <- c("#00EAF6", "#33CC33", "#A50021", "#1D178D")
plot(g5vve, what="classification", cex = .8)
```

```{r g4 classif plot, fig.width = 6, fig.height = 6, include = FALSE, eval = FALSE}
# g4eve_pal <- c("#00EAF6", "#33CC33", "#A50021", "#1D178D")
plot(g4vee, what="classification", cex = .8)
```


If we compare cluster membership between the five-cluster and four-cluster configuration, we see that the fifth cluster splits into Clusters 3 and 2 of the four-cluster configuration in a 2:1 ratio (with a couple of stragglers in Cluster 1).

```{r}
table(g5vve$classification, g4vee$classification)
```

Looking at the average value scores across clusters in the two configurations, we see that whether Cluster 5 looks more like Cluster 3 or 2 changes depending on the dimension. 

The following plots show the average score within a cluster on our five value dimensions. The scales are coded so that lower scores are left and higher scores are right, with 0 indicating the provincial average. The factors are all "standardized", which means they have no "real" units, but have a standard deviation of 1. So, a score of 1 would indicate a cluster is 1 standard deviation away from the the provincial average. 

To help compare, or "anchor" the value scales, the left-right ideological scale variable is also included with the chart. Like the values latent factors, this version has also been centred so that 0 equals the provincial mean with and scaled to have a standard deviation of 1.

```{r cluster means}
myfs <- names(tra_svy$variables %>% select(starts_with("f_")))

p_g5vve_means <- sumStats.survey.design(tra_svy, vars = c(myfs, "z_ideol"), byvar = "g5vve") %>%
  select(-c(min, q25, median, q75, max)) %>%
  arrange(variable) %>%
  mutate(se = mean / sqrt(n),
         lower95 = mean - (1.96 * se),
         upper95 = mean + (1.96 * se)) %>%
  ggplot() +
  aes(x = variable, y = mean, ymin = lower95, ymax = upper95, colour = as.factor(g5vve)) +
  geom_pointrange(position = position_dodge2(.3)) + 
  geom_hline(yintercept = 0, linetype = "dotted") +
  # scale_y_continuous(limits = c(-4.5,4.5), breaks = c(-4,-2,0,2,4)) +
  scale_colour_brewer(type = "div", palette = "Set1") + 
  labs(title = "Average value scores by cluster membership (5 clusters)",
       caption = "Source: 2022 CBC Calgary - The Road Ahead Survey",
       x = "Question",
       y = "Average score",
       colour = "Cluster")

p_g4vee_means <- sumStats.survey.design(tra_svy, vars = c(myfs, "z_ideol"), byvar = "g4vee") %>%
  select(-c(min, q25, median, q75, max)) %>%
  arrange(variable) %>%
  mutate(se = mean / sqrt(n),
         lower95 = mean - (1.96 * se),
         upper95 = mean + (1.96 * se)) %>%
  ggplot() +
  aes(x = variable, y = mean, ymin = lower95, ymax = upper95, colour = as.factor(g4vee)) +
  geom_pointrange(position = position_dodge2(.3)) + 
  geom_hline(yintercept = 0, linetype = "dotted") +
  # scale_y_continuous(limits = c(-4.5,4.5), breaks = c(-4,-2,0,2,4)) +
  scale_colour_brewer(type = "div", palette = "Set1") + 
  labs(title = "Average value scores by cluster membership (4 clusters)",
       subtitle = "Cell entries are group means and 95%  confidence intervals",
       caption = "Source: 2022 CBC Calgary - The Road Ahead Survey",
       x = "Question",
       y = "Average score",
       colour = "Cluster")

p_g5vve_means
# p_g4vee_means
```

Looking at how the average score on each value dimension varies across the clusters, we see...

1. Cluster 1 (15% of Albertans) is consistently left-wing on all dimensions.
2. Cluster 2 (18%) is consistently right-wing on all dimensions, though it is more moderate in its conservatism on the cultural and energy/environment dimensions
3. Cluster 3 (42%) is, across most dimensions, centrist, but lean slightly to the right on cultural conservatism and lean slightly left on economic conservatism, energy/environment, and western alienation.
4. Cluster 4 (14%) is right-wing on most dimensions, except for western alienation, where it is a bit below-average (i.e. the "left" position on alienation). Also, it is more right-wing than Cluster 2 on economic conservatism and energy/environment.
5. Cluster 5 (11%) has a mix of positions. It is fairly left in on populism and cultural conservatism, but fairly right-wing on western alienation, and right-leaning on energy/environment.

```{r cluster scatter, include = FALSE, eval = FALSE}
p_g5vve <- ggplot(tra_svy$variables) +
  aes(x = f_populism, y = f_economic, colour = as.factor(g5vve)) +
  geom_point(size=2, alpha=.7) + 
  geom_hline(yintercept = 0, linetype = "dotted") +
  geom_vline(xintercept = 0, linetype = "dotted") +
  scale_colour_brewer(type = "div", palette = "Set1") +
  theme(legend.position="bottom")
p_g4vee <- ggplot(tra_svy$variables) +
  aes(x = f_populism, y = f_economic, colour = as.factor(g4vee)) +
  geom_point(size=2, alpha=.7) + 
  geom_hline(yintercept = 0, linetype = "dotted") +
  geom_vline(xintercept = 0, linetype = "dotted") +
  scale_colour_brewer(type = "div", palette = "Set1") +
  theme(legend.position="bottom")

library(ggpubr)
ggarrange(p_g5vve, p_g4vee)
```

Vote choice within the clusters breaks down as follows:

1. Cluster 1 is almost completely (93%) voting NDP.
2. Cluster 2 is mostly (71%) voting UCP.
3. Cluster 3 is split with more than a 2:1 ratio in favour of the NDP versus the UCP (52% vs 20%). An eight of it (13%) is Undecided.
4. Cluster 4 is mostly (81%) voting UCP. 
5. Cluster 5 is the most heterogeneous in terms of vote choice. About half (51%) are voting NDP. About a fifth (18%) are voting UCP. A bit more than a tenth are "orphaned voters" (12%) or voting for one of the other progressive parties (11%)


```{r, warning = FALSE, message = FALSE}
xt(tra_svy, "votegrp", byvar = "g5vve", cramersV = TRUE, gamma = FALSE, taub = FALSE)
# xt(tra_svy, "votegrp", byvar = "g4vee", cramersV = TRUE, gamma = FALSE, taub = FALSE)
```


We could think of the clusters as:

1. Progressives (15% of Albertans) 
2. Provincialists (18% of Albertans)
3. Moderates (42% of Albertans)
4. Conservatives (14% of Albertans)
5. Wildcards (11% of Albertans)

The distinction between 2 and 4 can be clearly seen when we cross-tabulate the positions on the Alberta separatism question (coded in increasing levels of agreement) against cluster membership. Cluster 2 is more supportive of separation than Cluster 4--61% net agree in Cluster 2 versus 40% in Cluster 4.

```{r}
xt(tra_svy, "abseparate", byvar = "g5vve", cramersV = TRUE, gamma = FALSE, taub = FALSE)
# xt(tra_svy, "abpolice", byvar = "g5vve", cramersV = TRUE, gamma = FALSE, taub = FALSE)
# xt(tra_svy, "abpension", byvar = "g5vve", cramersV = TRUE, gamma = FALSE, taub = FALSE)
```


```{r give clusters proper names}
tra_svy$variables$cluster <- car::recode(
  tra_svy$variables$g5vve,
  '1 = "Progressives"; 
  2 = "Provincialists";
  3 = "Moderates"; 
  4 = "Conservatives"; 
  5 = "Wildcards"')
clusterlevs <- c("Progressives",
                 "Wildcards",
                 "Moderates",
                 "Conservatives",
                 "Provincialists"
                 )
tra_svy$variables$cluster <- factor(tra_svy$variables$cluster, levels = clusterlevs)
table(tra_svy$variables$cluster, tra_svy$variables$g5vve)
cluster_pal <- c("#da713f",   # rust for consistent left
                 "#54df5e",   # greyish green for wildcard voters  # mustard is #eac94d
                 "#bbbbbb",   # light grey for middle
                 "#53afe0",   # greyish blue for federalist right
                 "#B04FA9"   # greyish magenta for provincialist right
                 )
```

```{r, include = FALSE, eval = FALSE, warning = FALSE, message = FALSE}
xt(tra_svy, "g5vve", byvar = "votegrp", cramersV = TRUE, gamma = FALSE, taub = FALSE)
xt(tra_svy, "g4vee", byvar = "votegrp", cramersV = TRUE, gamma = FALSE, taub = FALSE)
```


Repeating this same exercise with the vote choice questions, we see similar patterns. 

UCP supporters. are about as far right as NDP supporters. WIP/IPA supporters are ever further to the right than UCP supporters. (The CIs for WIP/IPA supporters are because of their small sample size, but it's a reasonable assumption that they would get tighter with greater statistical power.)

```{r}
votegrp_pal <- 
  c("#D71920",   # Other left = light red
    "#f37221",   # NDP = orange
    "#3D9B35",   # Others = green
    "#184484",   # UCP = navy blue
    "#bbbbbb",   # Und = dark grey
    "#E76BF3"    # Other right = pink
    )

sumStats.survey.design(tra_svy, vars = myfs, byvar = "votegrp") %>%
  select(-c(min, q25, median, q75, max)) %>%
  arrange(variable) %>%
  mutate(se = mean / sqrt(n),
         lower95 = mean - (1.96 * se),
         upper95 = mean + (1.96 * se)) %>%
  ggplot() +
  aes(x = variable, y = mean, ymin = lower95, ymax = upper95, colour = votegrp) +
  geom_pointrange(position = position_dodge2(.3)) + 
  geom_hline(yintercept = 0, linetype = "dotted") +
  scale_y_continuous(limits = c(-1.1,1.1)) +
  scale_colour_manual(values = votegrp_pal) + 
  labs(title = "Average value scores by vote intention",
       caption = "Source: 2022 CBC Calgary - The Road Ahead Survey",
       x = "Question",
       y = "Average score",
       colour = "Vote")
```

## Cluster membership across demographic segments

The following graphs show the distribution of cluster membership across various demographic subgroups. Generally, none of these results are surprising.

```{r, warning = FALSE, message = FALSE}
xtlist <- list(
  "region" = svytable(~cluster+region, tra_svy, round = TRUE),
  "region5" = svytable(~cluster+region5, tra_svy, round = TRUE),
  "gender" = svytable(~cluster+gender, tra_svy, round = TRUE),
  "age" = svytable(~cluster+age, tra_svy, round = TRUE),
  "agegrp" = svytable(~cluster+agegrp, tra_svy, round = TRUE),
  "educ" = svytable(~cluster+educ, tra_svy, round = TRUE),
  "density" = svytable(~cluster+density, tra_svy, round = TRUE),
  "kids" = svytable(~cluster+kids, tra_svy, round = TRUE),
  "income" = svytable(~cluster+income, tra_svy, round = TRUE),
  "incomegrp" = svytable(~cluster+incomegrp, tra_svy, round = TRUE),
  "expenses" = svytable(~cluster+expenses, tra_svy, round = TRUE),
  "relig" = svytable(~cluster+relig, tra_svy, round = TRUE),
  "abidentity" = svytable(~cluster+abidentity, tra_svy, round = TRUE),
  "ideolgrp" = svytable(~cluster+ideolgrp, tra_svy, round = TRUE),
  "ideolgrp2" = svytable(~cluster+ideolgrp2, tra_svy, round = TRUE)
)

# this calculates subgroup percentages
xtlist1 <- NULL
for(i in 1:length(xtlist)) {
  xtlist1[[i]] <- as.data.frame(xtlist[[i]]) %>%
  group_by(paste(names(xtlist)[[i]])) %>%
  mutate(GrpPct =  round(Freq/sum(Freq), 2)) %>% 
  ungroup
}
```

### Region

```{r, warning = FALSE, message = FALSE}
as.data.frame(xtlist$region) %>%
  group_by(region) %>%
  mutate(GrpPct =  round(Freq/sum(Freq), 2)) %>% 
  ungroup %>%
  mutate(cluster = factor(cluster, levels = clusterlevs)) %>%
  ggplot() +
  aes(x = region, y = GrpPct, fill = cluster, 
      label = paste0(GrpPct*100, "%")) +
  geom_col(position = position_fill()) + 
  geom_text(position = position_fill(.5)) +
  scale_fill_manual(values = jbor_old5) +
  scale_y_continuous(labels = scales::percent) +
  labs(title = "Cluster membership by region",
       fill = "Cluster",
       y = "%",
       x = "Region") +
  theme_classic()

as.data.frame(xtlist$region5) %>%
  group_by(region5) %>%
  mutate(GrpPct =  round(Freq/sum(Freq), 2)) %>% 
  ungroup %>%
  mutate(cluster = factor(cluster, levels = clusterlevs)) %>%
  ggplot() +
  aes(x = region5, y = GrpPct, fill = cluster, 
      label = paste0(GrpPct*100, "%")) +
  geom_col(position = position_fill()) + 
  geom_text(position = position_fill(.5)) +
  scale_fill_manual(values = jbor_old5) +
  scale_y_continuous(labels = scales::percent) +
  labs(title = "Cluster membership by region",
       fill = "Cluster",
       y = "%",
       x = "Region") +
  theme_classic()
```

### Community type

```{r, warning = FALSE, message = FALSE}
as.data.frame(xtlist$density) %>%
  group_by(density) %>%
  mutate(GrpPct =  round(Freq/sum(Freq), 2)) %>% 
  ungroup %>%
  mutate(cluster = factor(cluster, levels = clusterlevs)) %>%
  ggplot() +
  aes(x = density, y = GrpPct, fill = cluster, 
      label = paste0(GrpPct*100, "%")) +
  geom_col(position = position_fill()) + 
  geom_text(position = position_fill(.5)) +
  scale_fill_manual(values = jbor_old5) +
  scale_y_continuous(labels = scales::percent) +
  labs(title = "Cluster membership by community type",
       fill = "Cluster",
       y = "%",
       x = "Community type") +
  theme_classic()
```

### Gender

```{r, warning = FALSE, message = FALSE}
as.data.frame(xtlist$gender) %>%
  group_by(gender) %>%
  mutate(GrpPct =  round(Freq/sum(Freq), 2)) %>% 
  ungroup %>%
  mutate(cluster = factor(cluster, levels = clusterlevs)) %>%
  ggplot() +
  aes(x = gender, y = GrpPct, fill = cluster, 
      label = paste0(GrpPct*100, "%")) +
  geom_col(position = position_fill()) + 
  geom_text(position = position_fill(.5)) +
  scale_fill_manual(values = jbor_old5) +
  scale_y_continuous(labels = scales::percent) +
  labs(title = "Cluster membership by gender",
       fill = "Cluster",
       y = "%",
       x = "Importance of gender") +
  theme_classic()
```

### Age

```{r, warning = FALSE, message = FALSE}
as.data.frame(xtlist$agegrp) %>%
  group_by(agegrp) %>%
  mutate(GrpPct =  round(Freq/sum(Freq), 2)) %>% 
  ungroup %>%
  mutate(cluster = factor(cluster, levels = clusterlevs)) %>%
  ggplot() +
  aes(x = agegrp, y = GrpPct, fill = cluster, 
      label = paste0(GrpPct*100, "%")) +
  geom_col(position = position_fill()) + 
  geom_text(position = position_fill(.5)) +
  scale_fill_manual(values = jbor_old5) +
  scale_y_continuous(labels = scales::percent) +
  labs(title = "Cluster membership by age",
       fill = "Cluster",
       y = "%",
       x = "Importance of age") +
  theme_classic()

as.data.frame(xtlist$age) %>%
  group_by(age) %>%
  mutate(GrpPct =  round(Freq/sum(Freq), 2)) %>% 
  ungroup %>%
  mutate(cluster = factor(cluster, levels = clusterlevs)) %>%
  ggplot() +
  aes(x = age, y = GrpPct, fill = cluster, 
      label = paste0(GrpPct*100, "%")) +
  geom_col(position = position_fill()) + 
  geom_text(position = position_fill(.5)) +
  scale_fill_manual(values = jbor_old5) +
  scale_y_continuous(labels = scales::percent) +
  labs(title = "Cluster membership by age",
       fill = "Cluster",
       y = "%",
       x = "Importance of age") +
  theme_classic()
```


### Children at home

```{r, warning = FALSE, message = FALSE}
as.data.frame(xtlist$kids) %>%
  group_by(kids) %>%
  mutate(GrpPct =  round(Freq/sum(Freq), 2)) %>% 
  ungroup %>%
  mutate(cluster = factor(cluster, levels = clusterlevs)) %>%
  ggplot() +
  aes(x = kids, y = GrpPct, fill = cluster, 
      label = paste0(GrpPct*100, "%")) +
  geom_col(position = position_fill()) + 
  geom_text(position = position_fill(.5)) +
  scale_fill_manual(values = jbor_old5) +
  scale_y_continuous(labels = scales::percent) +
  labs(title = "Cluster membership by children <18 living at home",
       fill = "Cluster",
       y = "%",
       x = "Children at home?") +
  theme_classic()
```

### Education

```{r, warning = FALSE, message = FALSE}
as.data.frame(xtlist$educ) %>%
  group_by(educ) %>%
  mutate(GrpPct =  round(Freq/sum(Freq), 2)) %>% 
  ungroup %>%
  mutate(cluster = factor(cluster, levels = clusterlevs)) %>%
  ggplot() +
  aes(x = educ, y = GrpPct, fill = cluster, 
      label = paste0(GrpPct*100, "%")) +
  geom_col(position = position_fill()) + 
  geom_text(position = position_fill(.5)) +
  scale_fill_manual(values = jbor_old5) +
  scale_y_continuous(labels = scales::percent) +
  labs(title = "Cluster membership by education",
       fill = "Cluster",
       y = "%",
       x = "Importance of education") +
  theme_classic()
```

### Income

```{r, warning = FALSE, message = FALSE}
as.data.frame(xtlist$incomegrp) %>%
  group_by(incomegrp) %>%
  mutate(GrpPct =  round(Freq/sum(Freq), 2)) %>% 
  ungroup %>%
  mutate(cluster = factor(cluster, levels = clusterlevs)) %>%
  ggplot() +
  aes(x = incomegrp, y = GrpPct, fill = cluster, 
      label = paste0(GrpPct*100, "%")) +
  geom_col(position = position_fill()) + 
  geom_text(position = position_fill(.5)) +
  scale_fill_manual(values = jbor_old5) +
  scale_y_continuous(labels = scales::percent) +
  labs(title = "Cluster membership by income",
       fill = "Cluster",
       y = "%",
       x = "Annual household income") +
  theme_classic()

as.data.frame(xtlist$income) %>%
  group_by(income) %>%
  mutate(GrpPct =  round(Freq/sum(Freq), 2)) %>% 
  ungroup %>%
  mutate(cluster = factor(cluster, levels = clusterlevs)) %>%
  ggplot() +
  aes(x = income, y = GrpPct, fill = cluster, 
      label = paste0(GrpPct*100, "%")) +
  geom_col(position = position_fill()) + 
  geom_text(position = position_fill(.5)) +
  scale_fill_manual(values = jbor_old5) +
  scale_y_continuous(labels = scales::percent) +
  labs(title = "Cluster membership by income",
       fill = "Cluster",
       y = "%",
       x = "Annual household income") +
  theme_classic()
```


### Financial hardship

```{r, warning = FALSE, message = FALSE}
as.data.frame(xtlist$expenses) %>%
  group_by(expenses) %>%
  mutate(GrpPct =  round(Freq/sum(Freq), 2)) %>% 
  ungroup %>%
  mutate(cluster = factor(cluster, levels = clusterlevs)) %>%
  ggplot() +
  aes(x = expenses, y = GrpPct, fill = cluster, 
      label = paste0(GrpPct*100, "%")) +
  geom_col(position = position_fill()) + 
  geom_text(position = position_fill(.5)) +
  scale_fill_manual(values = jbor_old5) +
  scale_y_continuous(labels = scales::percent) +
  scale_x_discrete(labels = c("Very easy", "Somewhat easy", 
                                    "Somewhat difficult", "Very difficult")) +
  labs(title = "Cluster membership by financial hardship",
       fill = "Cluster",
       y = "%",
       x = "Difficulty meeting expenses") +
  theme_classic()
```





### Religiosity 

```{r, warning = FALSE, message = FALSE}
as.data.frame(xtlist$relig) %>%
  group_by(relig) %>%
  mutate(GrpPct =  round(Freq/sum(Freq), 2)) %>% 
  ungroup %>%
  mutate(cluster = factor(cluster, levels = clusterlevs)) %>%
  ggplot() +
  aes(x = relig, y = GrpPct, fill = cluster, 
      label = paste0(GrpPct*100, "%")) +
  geom_col(position = position_fill()) + 
  geom_text(position = position_fill(.5)) +
  scale_fill_manual(values = jbor_old5) +
  scale_y_continuous(labels = scales::percent) +
  scale_x_discrete(labels = c("Not at all important", "Not very important", 
                              "Somewhat important", "Not at all important")) +
  labs(title = "Cluster membership by religiosity",
       fill = "Cluster",
       y = "%",
       x = "Importance of religion") +
  theme_classic()
```



```{r, warning = FALSE, message = FALSE}
as.data.frame(xtlist$ideolgrp2) %>%
  group_by(ideolgrp2) %>%
  mutate(GrpPct =  round(Freq/sum(Freq), 2)) %>% 
  ungroup %>%
  mutate(cluster = factor(cluster, levels = clusterlevs)) %>%
  ggplot() +
  aes(x = ideolgrp2, y = GrpPct, fill = cluster, 
      label = paste0(GrpPct*100, "%")) +
  geom_col(position = position_fill()) + 
  geom_text(position = position_fill(.5)) +
  scale_fill_manual(values = jbor_old5) +
  scale_y_continuous(labels = scales::percent) +
  labs(title = "Cluster membership by ideology",
       fill = "Cluster",
       y = "%",
       x = "Ideology") +
  theme_classic()

as.data.frame(xtlist$ideolgrp) %>%
  group_by(ideolgrp) %>%
  mutate(GrpPct =  round(Freq/sum(Freq), 2)) %>% 
  ungroup %>%
  mutate(cluster = factor(cluster, levels = clusterlevs)) %>%
  ggplot() +
  aes(x = ideolgrp, y = GrpPct, fill = cluster, 
      label = paste0(GrpPct*100, "%")) +
  geom_col(position = position_fill()) + 
  geom_text(position = position_fill(.5)) +
  scale_fill_manual(values = jbor_old5) +
  scale_y_continuous(labels = scales::percent) +
  labs(title = "Cluster membership by ideology",
       fill = "Cluster",
       y = "%",
       x = "Ideology") +
  theme_classic()
```


```{r, warning = FALSE, message = FALSE}
as.data.frame(xtlist$income) %>%
  group_by(income) %>%
  mutate(GrpPct =  round(Freq/sum(Freq), 2)) %>% 
  ungroup %>%
  mutate(cluster = factor(cluster, levels = clusterlevs)) %>%
  ggplot() +
  aes(x = income, y = GrpPct, fill = cluster, 
      label = paste0(GrpPct*100, "%")) +
  geom_col(position = position_fill()) + 
  geom_text(position = position_fill(.5)) +
  scale_fill_manual(values = jbor_old5) +
  scale_y_continuous(labels = scales::percent) +
  labs(title = "Cluster membership by income",
       fill = "Cluster",
       y = "%",
       x = "Income") +
  theme_classic()
```


```{r, include = FALSE, eval = FALSE}
# Tile plot

# The following chart is a tile plot, and it graphically presents the mean score for each cluster for each latent factor (and a standardized version of the left-right self-placement question). Darker colours mean "lower" (usually, more left-leaning) scores, and lighter colours mean "higher" (usually more right-leaning) scores.

# mbc_vmax5_scores <- tra_svy$variables %>%
#   select(c(g5vve, starts_with("f_")), z_ideol) %>%
#   group_by(g5vve) %>% 
#   summarise_all(mean, na.rm = TRUE) %>% 
#   pivot_longer(-g5vve, 
#                names_to = "Dimension", 
#                values_to = "Average")
# 
# ggplot(mbc_vmax5_scores) +
#   aes(x=Dimension, y=g5vve, fill=Average) + 
#   geom_tile() + 
#   geom_text(label=round(mbc_vmax5_scores$Average, 3)) +
#   # scale_x_discrete(labels = c("Imp econ", "Imp environ", "Imp soc prog", 
#   #                             "Cultural cons.", "Gen left-right", "Energy/enviro")) +
#   # scale_y_discrete(labels = c("Right1 (41%)", "Left1 (22%)", "Left2 (19%)", "Right2 (11%)", "???? (7%)")) +
#   scale_fill_viridis_c() + 
#   labs(title = "Average latent factor scores by cluster membership",
#        subtitle = "Model-based clustering,  G=5, VVE",
#        x="Dimension", 
#        y="Cluster membership", 
#        fill="Average \nscore") +
#   theme_classic() +
#   theme(axis.text.x = element_text(angle=45,  hjust=1)) +
#   coord_flip()
```


# Values across other dimensions

The variation of scores on each value dimension across other segments of the population generally conform to expectations. 

## Region

```{r}
myfs <- names(tra_svy$variables %>% select(starts_with("f_")))
sumStats.survey.design(tra_svy, vars = myfs, byvar = "region") %>%
  select(-c(min, q25, median, q75, max)) %>%
  arrange(variable) %>%
  mutate(se = mean / sqrt(n),
         lower95 = mean - (1.96 * se),
         upper95 = mean + (1.96 * se)) %>%
  ggplot() +
  aes(x = variable, y = mean, ymin = lower95, ymax = upper95, colour = region) +
  geom_pointrange(position = position_dodge2(.3)) + 
  geom_hline(yintercept = 0, linetype = "dotted") +
  scale_y_continuous(limits = c(-.85,.85), breaks = c(-.8,-.4,0,.4,.8)) +
  scale_colour_brewer(type = "div", palette = "Set1") + 
  labs(title = "Average value scores by region",
       caption = "Source: 2022 CBC Calgary - The Road Ahead Survey",
       x = "Question",
       y = "Average score",
       colour = "Region")

sumStats.survey.design(tra_svy, vars = myfs, byvar = "region5") %>%
  select(-c(min, q25, median, q75, max)) %>%
  arrange(variable) %>%
  mutate(se = mean / sqrt(n),
         lower95 = mean - (1.96 * se),
         upper95 = mean + (1.96 * se)) %>%
  ggplot() +
  aes(x = variable, y = mean, ymin = lower95, ymax = upper95, colour = region5) +
  geom_pointrange(position = position_dodge2(.3)) + 
  geom_hline(yintercept = 0, linetype = "dotted") +
  scale_y_continuous(limits = c(-.85,.85), breaks = c(-.8,-.4,0,.4,.8)) +
  labs(title = "Average value scores by region",
       caption = "Source: 2022 CBC Calgary - The Road Ahead Survey",
       x = "Question",
       y = "Average score",
       colour = "Region")

sumStats.survey.design(tra_svy, vars = myfs, byvar = "region10") %>%
  select(-c(min, q25, median, q75, max)) %>%
  arrange(variable) %>%
  mutate(se = mean / sqrt(n),
         lower95 = mean - (1.96 * se),
         upper95 = mean + (1.96 * se)) %>%
  ggplot() +
  aes(x = variable, y = mean, ymin = lower95, ymax = upper95, colour = region10) +
  geom_pointrange(position = position_dodge2(.3)) + 
  geom_hline(yintercept = 0, linetype = "dotted") +
  scale_y_continuous(limits = c(-.85,.85), breaks = c(-.8,-.4,0,.4,.8)) +
  labs(title = "Average value scores by region",
       caption = "Source: 2022 CBC Calgary - The Road Ahead Survey",
       x = "Question",
       y = "Average score",
       colour = "Region")
```

## Community type 

```{r}
sumStats.survey.design(tra_svy, vars = myfs, byvar = "density") %>%
  select(-c(min, q25, median, q75, max)) %>%
  arrange(variable) %>%
  mutate(se = mean / sqrt(n),
         lower95 = mean - (1.96 * se),
         upper95 = mean + (1.96 * se)) %>%
  ggplot() +
  aes(x = variable, y = mean, ymin = lower95, ymax = upper95, colour = density) +
  geom_pointrange(position = position_dodge2(.3)) + 
  geom_hline(yintercept = 0, linetype = "dotted") +
  scale_y_continuous(limits = c(-.85,.85), breaks = c(-.8,-.4,0,.4,.8)) +
  scale_colour_brewer(type = "div", palette = "Set1") + 
  labs(title = "Average value scores by community type",
       caption = "Source: 2022 CBC Calgary - The Road Ahead Survey",
       x = "Question",
       y = "Average score",
       colour = "Community \ntype")
```



## Gender

```{r}
sumStats.survey.design(tra_svy, vars = myfs, byvar = "gender") %>%
  select(-c(min, q25, median, q75, max)) %>%
  arrange(variable) %>%
  mutate(se = mean / sqrt(n),
         lower95 = mean - (1.96 * se),
         upper95 = mean + (1.96 * se)) %>%
  ggplot() +
  aes(x = variable, y = mean, ymin = lower95, ymax = upper95, colour = gender) +
  geom_pointrange(position = position_dodge2(.3)) + 
  geom_hline(yintercept = 0, linetype = "dotted") +
  scale_y_continuous(limits = c(-.85,.85), breaks = c(-.8,-.4,0,.4,.8)) +
  scale_colour_brewer(type = "div", palette = "Set1") + 
  labs(title = "Average value scores by gender",
       caption = "Source: 2022 CBC Calgary - The Road Ahead Survey",
       x = "Question",
       y = "Average score",
       colour = "Gender")
```


## Age

```{r}
sumStats.survey.design(tra_svy, vars = myfs, byvar = "age") %>%
  select(-c(min, q25, median, q75, max)) %>%
  arrange(variable) %>%
  mutate(se = mean / sqrt(n),
         lower95 = mean - (1.96 * se),
         upper95 = mean + (1.96 * se)) %>%
  ggplot() +
  aes(x = variable, y = mean, ymin = lower95, ymax = upper95, colour = age) +
  geom_pointrange(position = position_dodge2(.3)) + 
  geom_hline(yintercept = 0, linetype = "dotted") +
  scale_y_continuous(limits = c(-.85,.85), breaks = c(-.8,-.4,0,.4,.8)) +
  scale_colour_viridis_d() + 
  labs(title = "Average value scores by age",
       caption = "Source: 2022 CBC Calgary - The Road Ahead Survey",
       x = "Question",
       y = "Average score",
       colour = "Age")

sumStats.survey.design(tra_svy, vars = myfs, byvar = "agegrp") %>%
  select(-c(min, q25, median, q75, max)) %>%
  arrange(variable) %>%
  mutate(se = mean / sqrt(n),
         lower95 = mean - (1.96 * se),
         upper95 = mean + (1.96 * se)) %>%
  ggplot() +
  aes(x = variable, y = mean, ymin = lower95, ymax = upper95, colour = agegrp) +
  geom_pointrange(position = position_dodge2(.3)) + 
  geom_hline(yintercept = 0, linetype = "dotted") +
  scale_y_continuous(limits = c(-.85,.85), breaks = c(-.8,-.4,0,.4,.8)) +
  scale_colour_viridis_d() + 
  labs(title = "Average value scores by agegrp",
       caption = "Source: 2022 CBC Calgary - The Road Ahead Survey",
       x = "Question",
       y = "Average score",
       colour = "Age")
```


## Children at home

```{r}
sumStats.survey.design(tra_svy, vars = myfs, byvar = "kids") %>%
  select(-c(min, q25, median, q75, max)) %>%
  arrange(variable) %>%
  mutate(se = mean / sqrt(n),
         lower95 = mean - (1.96 * se),
         upper95 = mean + (1.96 * se)) %>%
  ggplot() +
  aes(x = variable, y = mean, ymin = lower95, ymax = upper95, colour = kids) +
  geom_pointrange(position = position_dodge2(.3)) + 
  geom_hline(yintercept = 0, linetype = "dotted") +
  scale_y_continuous(limits = c(-.85,.85), breaks = c(-.8,-.4,0,.4,.8)) +
  scale_colour_brewer(type = "div", palette = "Set1") + 
  labs(title = "Average value scores by children living at home",
       caption = "Source: 2022 CBC Calgary - The Road Ahead Survey",
       x = "Question",
       y = "Average score",
       colour = "Children \nat home")
```

## Education

```{r}
sumStats.survey.design(tra_svy, vars = myfs, byvar = "educ") %>%
  select(-c(min, q25, median, q75, max)) %>%
  arrange(variable) %>%
  mutate(se = mean / sqrt(n),
         lower95 = mean - (1.96 * se),
         upper95 = mean + (1.96 * se)) %>%
  ggplot() +
  aes(x = variable, y = mean, ymin = lower95, ymax = upper95, colour = educ) +
  geom_pointrange(position = position_dodge2(.3)) + 
  geom_hline(yintercept = 0, linetype = "dotted") +
  scale_y_continuous(limits = c(-.85,.85), breaks = c(-.8,-.4,0,.4,.8)) +
  scale_color_viridis_d() + 
  labs(title = "Average value scores by education",
       caption = "Source: 2022 CBC Calgary - The Road Ahead Survey",
       x = "Question",
       y = "Average score",
       colour = "Education")
```

## Income 

```{r}
sumStats.survey.design(tra_svy, vars = myfs, byvar = "incomegrp") %>%
  select(-c(min, q25, median, q75, max)) %>%
  arrange(variable) %>%
  mutate(se = mean / sqrt(n),
         lower95 = mean - (1.96 * se),
         upper95 = mean + (1.96 * se)) %>%
  filter(!is.na(incomegrp)) %>%
  ggplot() +
  aes(x = variable, y = mean, ymin = lower95, ymax = upper95, colour = incomegrp) +
  geom_pointrange(position = position_dodge2(.3)) + 
  geom_hline(yintercept = 0, linetype = "dotted") +
  scale_y_continuous(limits = c(-.85,.85), breaks = c(-.8,-.4,0,.4,.8)) +
  scale_colour_viridis_d() + 
  labs(title = "Average value scores by income",
       caption = "Source: 2022 CBC Calgary - The Road Ahead Survey",
       x = "Question",
       y = "Average score",
       colour = "Income")

sumStats.survey.design(tra_svy, vars = myfs, byvar = "income") %>%
  select(-c(min, q25, median, q75, max)) %>%
  arrange(variable) %>%
  mutate(se = mean / sqrt(n),
         lower95 = mean - (1.96 * se),
         upper95 = mean + (1.96 * se)) %>%
  filter(!is.na(income)) %>%
  ggplot() +
  aes(x = variable, y = mean, ymin = lower95, ymax = upper95, colour = as.factor(income)) +
  geom_pointrange(position = position_dodge2(.3)) + 
  geom_hline(yintercept = 0, linetype = "dotted") +
  scale_y_continuous(limits = c(-.85,.85), breaks = c(-.8,-.4,0,.4,.8)) +
  scale_colour_viridis_d() + 
  labs(title = "Average value scores by income",
       caption = "Source: 2022 CBC Calgary - The Road Ahead Survey",
       x = "Question",
       y = "Average score",
       colour = "Income")
```

## Financial hardship

```{r}
sumStats.survey.design(tra_svy, vars = myfs, byvar = "expenses") %>%
  select(-c(min, q25, median, q75, max)) %>%
  arrange(variable) %>%
  mutate(se = mean / sqrt(n),
         lower95 = mean - (1.96 * se),
         upper95 = mean + (1.96 * se)) %>%
  ggplot() +
  aes(x = variable, y = mean, ymin = lower95, ymax = upper95, colour = as.factor(expenses)) +
  geom_pointrange(position = position_dodge2(.3)) + 
  geom_hline(yintercept = 0, linetype = "dotted") +
  scale_y_continuous(limits = c(-.85,.85), 
                     breaks = c(-.8,-.4,0,.4,.8)) +
  scale_colour_viridis_d(labels = c("Very easy", "Somewhat easy", 
                                    "Somewhat difficult", "Very difficult")) + 
  labs(title = "Average value scores by financial hardship",
       caption = "Source: 2022 CBC Calgary - The Road Ahead Survey",
       x = "Question",
       y = "Average score",
       colour = "Difficulty \nmeeting \nexpenses")
```

## Religiosity

```{r}
sumStats.survey.design(tra_svy, vars = myfs, byvar = "relig") %>%
  select(-c(min, q25, median, q75, max)) %>%
  arrange(variable) %>%
  mutate(se = mean / sqrt(n),
         lower95 = mean - (1.96 * se),
         upper95 = mean + (1.96 * se)) %>%
  mutate(relig = factor((relig))) %>%
  filter(!is.na(relig)) %>%
  ggplot() +
  aes(x = variable, y = mean, ymin = lower95, ymax = upper95, colour = relig) +
  geom_pointrange(position = position_dodge2(.3)) + 
  geom_hline(yintercept = 0, linetype = "dotted") +
  scale_y_continuous(limits = c(-.85,.85), 
                     breaks = c(-.8,-.4,0,.4,.8)) +
  scale_colour_viridis_d(labels = c("Not at all important", "Not very important", 
                                  "Somewhat important", "Not at all important")) + 
  labs(title = "Average value scores by religiosity",
       caption = "Source: 2022 CBC Calgary - The Road Ahead Survey",
       x = "Question",
       y = "Average score",
       colour = "Importance \n of religion")
```


## Ideology

```{r}
sumStats.survey.design(tra_svy, vars = myfs, byvar = "ideolgrp2") %>%
  select(-c(min, q25, median, q75, max)) %>%
  arrange(variable) %>%
  mutate(se = mean / sqrt(n),
         lower95 = mean - (1.96 * se),
         upper95 = mean + (1.96 * se)) %>%
  ggplot() +
  aes(x = variable, y = mean, ymin = lower95, ymax = upper95, colour = ideolgrp2) +
  geom_pointrange(position = position_dodge2(.3)) + 
  geom_hline(yintercept = 0, linetype = "dotted") +
  scale_y_continuous(limits = c(-.85,.85), breaks = c(-.8,-.4,0,.4,.8)) +
  scale_color_viridis_d() + 
  labs(title = "Average value scores by ideology",
       caption = "Source: 2022 CBC Calgary - The Road Ahead Survey",
       x = "Question",
       y = "Average score",
       colour = "Ideology")

sumStats.survey.design(tra_svy, vars = myfs, byvar = "ideolgrp") %>%
  select(-c(min, q25, median, q75, max)) %>%
  arrange(variable) %>%
  mutate(se = mean / sqrt(n),
         lower95 = mean - (1.96 * se),
         upper95 = mean + (1.96 * se)) %>%
  ggplot() +
  aes(x = variable, y = mean, ymin = lower95, ymax = upper95, colour = ideolgrp) +
  geom_pointrange(position = position_dodge2(.3)) + 
  geom_hline(yintercept = 0, linetype = "dotted") +
  scale_y_continuous(limits = c(-.85,.85), breaks = c(-.8,-.4,0,.4,.8)) +
  scale_color_viridis_d() + 
  labs(title = "Average value scores by ideology",
       caption = "Source: 2022 CBC Calgary - The Road Ahead Survey",
       x = "Question",
       y = "Average score",
       colour = "Ideology")
```



```{r mbc w indiv Qs, include = FALSE, eval = FALSE}

# # Cluster analysis with individual questions (skip if )
# 
# These results tell substantively the same story as using the latent factors as inputs. While there are some nuanced differences, the big-picture is largely the same. *(Note: Here, while there is a very large improvement in model fit between five- and six-cluster configurations, Cluster 6 just splits up the far left cluster in the five-cluster configuration.)*
  
  
library(mclust)
set.seed(2022)
mbc_qs <- Mclust(ds_baked)
plot(mbc_qs, what="BIC")
```

```{r, include = FALSE, eval = FALSE}
# library(tidyverse)
# library(ggplot2)
# 
# Run model for G=6 EEE
set.seed(2022)
g6eee <- Mclust(ds_baked, G=6, modelNames="EEE")
tra_svy$variables$g6eee <- g6eee$classification

# Run model for G=5 EEE
set.seed(2022)
g5eee <- Mclust(ds_baked, G=5, modelNames="EEE")
tra_svy$variables$g5eee <- g5eee$classification

# table(tra_svy$variables$g6eee, tra_svy$variables$g5vve)
# table(tra_svy$variables$g5eee, tra_svy$variables$g5vve)
```

```{r, include = FALSE, eval = FALSE}
P_g5eee_means <- sumStats.survey.design(tra_svy, vars = myfs, byvar = "g5eee") %>%
  select(-c(min, q25, median, q75, max)) %>%
  arrange(variable) %>%
  mutate(se = mean / sqrt(n),
         lower95 = mean - (1.96 * se),
         upper95 = mean + (1.96 * se)) %>%
  ggplot() +
  aes(x = variable, y = mean, ymin = lower95, ymax = upper95, colour = as.factor(g5eee)) +
  geom_pointrange(position = position_dodge2(.3)) + 
  geom_hline(yintercept = 0, linetype = "dotted") +
  # scale_y_continuous(limits = c(-4.5,4.5), breaks = c(-4,-2,0,2,4)) +
  scale_colour_brewer(type = "div", palette = "Set1") + 
  labs(title = "Average value scores by cluster membership (5 clusters)",
       caption = "Source: 2022 CBC Calgary - The Road Ahead Survey",
       x = "Question",
       y = "Average score",
       colour = "Cluster")

P_g6eee_means <- sumStats.survey.design(tra_svy, vars = myfs, byvar = "g6eee") %>%
  select(-c(min, q25, median, q75, max)) %>%
  arrange(variable) %>%
  mutate(se = mean / sqrt(n),
         lower95 = mean - (1.96 * se),
         upper95 = mean + (1.96 * se)) %>%
  ggplot() +
  aes(x = variable, y = mean, ymin = lower95, ymax = upper95, colour = as.factor(g6eee)) +
  geom_pointrange(position = position_dodge2(.3)) + 
  geom_hline(yintercept = 0, linetype = "dotted") +
  # scale_y_continuous(limits = c(-4.5,4.5), breaks = c(-4,-2,0,2,4)) +
  scale_colour_brewer(type = "div", palette = "Set1") + 
  labs(title = "Average value scores by cluster membership (4 clusters)",
       caption = "Source: 2022 CBC Calgary - The Road Ahead Survey",
       x = "Question",
       y = "Average score",
       colour = "Cluster")

P_g5eee_means
P_g6eee_means
```


```{r kmeans, include = FALSE, eval = FALSE}

# Testing a kmeans classifier

library(tidymodels)

kclust <- kmeans(fa_scores, centers = 4)
tidy(kclust)

table(kclust$cluster, tra_svy$variables$cluster)
table(tra_svy$variables$cluster, kclust$cluster)

tra_svy$variables$k4 <- kclust$cluster

xt(tra_svy, "dvotegrp", byvar = "k4")
sumStats(tra_svy, c(myfs), byvar = "k4")

sumStats.survey.design(tra_svy, vars = myfs, byvar = "k4") %>%
  select(-c(min, q25, median, q75, max)) %>%
  arrange(variable) %>%
  mutate(se = mean / sqrt(n),
         lower95 = mean - (1.96 * se),
         upper95 = mean + (1.96 * se)) %>%
  ggplot() +
  aes(x = variable, y = mean, ymin = lower95, ymax = upper95, colour = as.factor(k4)) +
  geom_pointrange(position = position_dodge2(.3)) + 
  geom_hline(yintercept = 0, linetype = "dotted") +
  scale_y_continuous(limits = c(-4.5,4.5), breaks = c(-4,-2,0,2,4)) +
  scale_colour_brewer(type = "div", palette = "Set1") + 
  labs(title = "Average value scores by cluster membership",
       caption = "Source: 2022 CBC Calgary - The Road Ahead Survey",
       x = "Question",
       y = "Average score",
       colour = "Cluster \n(kmeans)")




# kclusts <- 
#   tibble(k = 1:9) %>%
#   mutate(
#     kclust = map(k, ~kmeans(fa_scores, .x)),
#     tidied = map(kclust, tidy),
#     glanced = map(kclust, glance),
#     augmented = map(kclust, augment, points)
#   )
# kclusts
# 
# clusters <- 
#   kclusts %>%
#   unnest(cols = c(tidied))
# 
# assignments <- 
#   kclusts %>% 
#   unnest(cols = c(augmented))
# 
# clusterings <- 
#   kclusts %>%
#   unnest(cols = c(glanced))
# 
# p_kclusts <- 
#   ggplot(assignments, aes(x = x1, y = x2)) +
#   geom_point(aes(color = .cluster), alpha = 0.8) + 
#   facet_wrap(~ k)
# p_kclusts

```


# Vote choice models 

Note: some variables are excluded because they are not significant when they first enter the models. These include:

- kids
- community density
- any of the economic evaluations
- attitudes on the provincial police force and pension plan

The vote choice models have voting for the UCP as the reference category and the other choices as voting WIP/IPA, NDP, ABP/Lib/Grn, or Other (i.e. orphaned voters).

The results are presented in order of the blocks of variables and start with the multinomial regression coefficients (UCP is the reference category) and then predicted probabilities. 

```{r, include = FALSE, eval = FALSE}
# # Before modeling, we have to decide how to reduce the number of options we have. 
# # Let's look at the averages to the ideology, Notley, and Smith questions.
# 
# sumStats.survey.design(tra_svy, vars = c("ideology", "notley", "smith"), byvar = "dvotegrp") %>%
#   select(-c(min, q25, median, q75, max)) %>%
#   arrange(variable)
# 
# # It looks like the Other/Undecided category looks more like the non-NDP left wing voters than that WIP/IPA voters. 
# 
# tra_svy$variables$VOTE <- car::recode(
#   tra_svy$variables$dvotegrp,
#   '"ABP, Lib, Grn" = NA;
#   "WIP, IP" = NA', 
#   as.factor = TRUE)
# tra_svy$variables$VOTE <- factor(tra_svy$variables$VOTE, 
#                                  levels = c("NDP", "UCP", "Other"))
# xt(tra_svy, "VOTE")
# tra_svy_r <- as.svrepdesign(tra_svy, type = "JK1")
```

```{r, include = FALSE, eval = FALSE}
# Note: this is unused because trying to model WIP/IIP vote is useless.
#
# tra_svy$variables$VOTE <- car::recode(
#   tra_svy$variables$dvotegrp,
#   '"ABP, Lib, Grn" = NA;
#   "Other" = NA', as.factor = TRUE)
# tra_svy$variables$VOTE <- factor(tra_svy$variables$VOTE, 
#                                  levels = c("UCP", "NDP", "WIP, IPA"))
#
library(nnet)
# library(svrepmisc)
# library(svyEffects)
# 

tra_svy$variables$dvotegrp <- factor(tra_svy$variables$dvotegrp, 
                                     levels = c("UCP", "WIP, IPA", "NDP", "ABP, Lib, Grn", "Other"))
tra_svy_r <- as.svrepdesign(tra_svy, type = "JK1")



m1 <- multinom(
  dvotegrp ~ region + gender + agegrp + educ + density, 
  tra_svy$variables, trace = FALSE, weights = weight)

m2 <- multinom(
  dvotegrp ~ region + gender + agegrp + educ + density +
    relig + abidentity + ideology + 
    f_economic + f_populism + f_western + f_cultural + f_energyenviro, 
  tra_svy$variables, trace = FALSE, weights = weight)

m3 <- multinom(
  dvotegrp ~ region + gender + agegrp + educ + density +
    relig + abidentity + ideology + 
    f_economic + f_populism + f_western + f_cultural + f_energyenviro +
    c19_prov + c19_toostrict + abseparate, 
  tra_svy$variables, trace = FALSE, weights = weight)

m4 <- multinom(
  dvotegrp ~ region + gender + agegrp + educ + density +
    relig + abidentity + ideology + 
    f_economic + f_populism + f_western + f_cultural + f_energyenviro +
    c19_prov + c19_toostrict + abseparate +
    smith + notley, 
  tra_svy$variables, trace = FALSE, weights = weight)

t(DAMisc::mnlSig(m1)) %>% 
  kable(caption = "Model 1 - Demographics") %>%
  footnote(general = "Cell entires are multinomial logit coefficients.", "*p<0.05.") %>%
  kable_classic()
t(mnlSig(m2)) %>% 
  kable(caption = "Model 3 - Values and Beliefs") %>%
  footnote(general = "Cell entires are multinomial logit coefficients.", "*p<0.05.") %>%
  kable_classic()
t(mnlSig(m3)) %>% 
  kable(caption = "Model 1 - Issues") %>%
  footnote(general = "Cell entires are multinomial logit coefficients.", "*p<0.05.") %>%
  kable_classic()
t(mnlSig(m4)) %>% 
  kable(caption = "Model 1 - Leadership") %>%
  footnote(general = "Cell entires are multinomial logit coefficients.", "*p<0.05.") %>%
  kable_classic()
```


```{r run models, cache = TRUE}
tra_svy$variables$dvotegrp <- factor(tra_svy$variables$dvotegrp, 
                                     levels = c("UCP", "WIP, IPA", "NDP", "ABP, Lib, Grn", "Other"))
tra_svy_r <- as.svrepdesign(tra_svy, type = "JK1")

library(svrepmisc)
library(svyEffects)

m1form <- "dvotegrp ~ region + gender + agegrp + educ + density"

m2form <- "dvotegrp ~ region + gender + agegrp + educ + density + relig + abidentity + ideology +  f_economic + f_populism + f_western + f_cultural + f_energyenviro"

m3form <- "dvotegrp ~ region + gender + agegrp + educ + density + relig + abidentity + ideology +  f_economic + f_populism + f_western + f_cultural + f_energyenviro + c19_prov + c19_toostrict + abseparate"

m4form <- "dvotegrp ~ region + gender + agegrp + educ + density + relig + abidentity + ideology +  f_economic + f_populism + f_western + f_cultural + f_energyenviro + c19_prov + c19_toostrict + abseparate + smith + notley"

m1w <- svymultinom(as.formula(m1form), tra_svy_r, trace = FALSE)
m2w <- svymultinom(as.formula(m2form), tra_svy_r, trace = FALSE)
m3w <- svymultinom(as.formula(m3form), tra_svy_r, trace = FALSE)
m4w <- svymultinom(as.formula(m4form), tra_svy_r, trace = FALSE)

```


```{r, include = FALSE, eval = FALSE}
# m3alt_form <- "dvotegrp ~ region + gender + agegrp + educ + density + relig + abidentity + ideology +  f_economic + f_populism + f_western + f_cultural + f_energyenviro + c19_prov + c19_toostrict + abseparate + abpolice + abpension"
# m3alt <- svymultinom(as.formula(m3alt_form), design = tra_svy_r, trace = FALSE)
# mnlSig(m3alt) %>% kable()
```



```{r, include = FALSE, eval = FALSE}
library(pscl)
hitmiss(m4)

m4 <- multinom(
    dvotegrp ~ region + gender + agegrp + educ + density +
        relig + abidentity + ideology + 
        f_economic + f_populism + f_western + f_cultural + f_energyenviro +
        c19_prov + c19_toostrict + abseparate +
        smith + notley, 
    tra_svy$variables, weights = weight, trace = FALSE)
View(m4)
View(round(m4$fitted.values))

library(pscl)
hitmiss(m4)

```


```{r, include = FALSE, eval = FALSE}
# tra_svy$variables$VOTE <- car::recode(
#   tra_svy$variables$dvotegrp,
#   '"ABP, Lib, Grn" = NA;
#   "WIP, IPA" = NA', 
#   as.factor = TRUE)
# tra_svy$variables$VOTE <- factor(tra_svy$variables$VOTE, 
#                                  levels = c("NDP", "UCP", "Other"))
# xt(tra_svy, "VOTE")
# tra_svy_r <- as.svrepdesign(tra_svy, type = "JK1")
# 
# m1 <- svymultinom(
#   VOTE ~ region + gender + agegrp + educ + kids + density, 
#   design = tra_svy_r, trace = FALSE)
# mnlSig(m1)
# 
# m2 <- svymultinom(
#   VOTE ~ region + gender + agegrp + educ + kids + density +
#     f_populism + f_western + f_economic + f_cultural + f_energyenviro + abidentity + ideology, 
#   design = tra_svy_r, trace = FALSE)
# mnlSig(m2)
# 
# m3 <- svymultinom(
#   VOTE ~ region + gender + agegrp + educ + kids + density +
#     f_populism + f_western + f_economic + f_cultural + f_energyenviro + abidentity + ideology + 
#     provecon + hholdpast + hholdfuture + expenses, 
#   design = tra_svy_r, trace = FALSE)
# mnlSig(m3)
# 
# m4 <- svymultinom(
#   VOTE ~ region + gender + agegrp + educ + kids + density +
#     f_populism + f_western + f_economic + f_cultural + f_energyenviro + abidentity + ideology + 
#     provecon + hholdpast + hholdfuture + expenses +
#     c19_prov + c19_toostrict, 
#   design = tra_svy_r, trace = FALSE)
# mnlSig(m4)
# 
# m5 <- svymultinom(
#   VOTE ~ region + gender + agegrp + educ + kids + density +
#     f_populism + f_western + f_economic + f_cultural + f_energyenviro + abidentity + ideology + 
#     provecon + hholdpast + hholdfuture + expenses +
#     c19_prov + c19_toostrict +
#     smith + notley, 
#   design = tra_svy_r, trace = FALSE)
# mnlSig(m5)
```

```{r binary models, warning = FALSE, message = FALSE, error = FALSE, include = FALSE, eval = FALSE}
tra_svy$variables$VOTENDP <- car::recode(
  tra_svy$variables$dvotegrp, 
  '"NDP"=1; "UCP"=0; else=NA')
# (tra_svy, "VOTENDP")

m1 <- svyglm(
  VOTENDP ~ region + gender + agegrp + educ, 
  design = tra_svy, family = "binomial")
m2 <- svyglm(
  VOTENDP ~ region + gender + agegrp + educ +
    relig + abidentity + ideology + f_economic + f_energyenviro, 
  design = tra_svy, family = "binomial")
m3 <- svyglm(
  VOTENDP ~ region + gender + agegrp + educ + 
    relig + abidentity + ideology + f_economic + f_energyenviro + 
    c19_prov + c19_toostrict + abseparate, 
  design = tra_svy, family = "binomial")
m4 <- svyglm(
  VOTENDP ~ region + gender + agegrp + educ + 
    relig + abidentity + ideology + f_economic  + f_energyenviro + 
    c19_prov + c19_toostrict + abseparate +
    smith + notley, 
  design = tra_svy, family = "binomial")


# Save this bit for looking at "other" voters
# library(pscl)
# hitmiss(m1)
# hitmiss(m2)
# hitmiss(m3)
# hitmiss(m4)


library(svyEffects)
pre_m1 <- svyPRE(m1)
pre_m2 <- svyPRE(m2)
pre_m3 <- svyPRE(m3)
pre_m4 <- svyPRE(m4)

pre_table <- as.data.frame(rbind(pre_m1, pre_m2, pre_m3, pre_m4) %>%
  add_column(model = c(rep("Model 1", 2),
                       rep("Model 2", 2),
                       rep("Model 3", 2),
                       rep("Model 4", 2))) %>%
  pivot_wider(values_from = value, names_from = model)) %>% 
  select(-statistic)
rownames(pre_table) <- (c("% correct", "PRE"))
pcc_list <- c("% correct", round(as.numeric(pre_table[1,]), 2))
pre_list <- c("% red. in err", round(as.numeric(pre_table[2,]), 2))

myvarnames <- c(
  "Region: Edm",
  "Region: Other",
  "Gender: Woman",
  "Age: 25-44",
  "Age: 45-64",
  "Age: 65+",
  "Educ: Some PSE",
  "Educ: Bachelors",
  "Educ: Postgrad",
  "Religiosity",
  "Reg ID: More w/ Can",
  "Reg ID: More w/ AB",
  "Left-right ideol",
  "Values: Econ cons",
  "Values: Energy>enviro",
  "Satis w/ AB C19",
  "C19 not strict enough",
  "C19 too strict",
  "AB should spearate",
  "Smith rating",
  "Notley rating"
)

```


```{r binary stargazer output, results = "asis", include = FALSE, eval = FALSE}
library(stargazer)
stargazer(m1, m2, m3, m4,
          dep.var.caption = "Dependent variable: Vote NDP = 1; Vote UCP = 0",
          dep.var.labels.include = FALSE,
          column.labels = c("Demographics", "Values/Beliefs", "Issues", "Leadership"),
          digits = 2,
          covariate.labels = myvarnames,
          single.row = TRUE,
          header = FALSE, 
          align = TRUE,
          add.lines = list(pcc_list, pre_list),
          # star.cutoffs = c(.05,0),
          notes.align = "l", 
          notes.label = "", 
          notes.append = TRUE,
          notes = c("Cells report binary logit coefficients (standard errors)"),
          type = "html")
```


```{r, include = FALSE, eval = FALSE}
# mod <- svyglm(VOTENDP ~ region + gender + agegrp + educ +
#   relig + f_economic + f_energyenviro + abidentity + ideology, 
#   design = tra_svy, family = "binomial")
# summary(mod)
```

## Demographics

```{r}
(mnlSig(m1w)) %>% 
  kable(caption = "Model 1 - Demographics") %>%
  footnote(general = "Cell entires are multinomial logit coefficients.", "*p<0.05.") %>%
  kable_classic(full_width = FALSE)
```

```{r, include = FALSE, eval = FALSE}
# library(svyEffects)
# m1_region <- svyMER(m1w, "region", seed = 2022,
#                     design = tra_svy_r, modform = m1form, weightvar = "weight")
# m1_gender <- svyMER(m1w, "gender", seed = 2022,
#                     design = tra_svy_r, modform = m1form, weightvar = "weight")
# m1_agegrp <- svyMER(m1w, "agegrp", seed = 2022,
#                     design = tra_svy_r, modform = m1form, weightvar = "weight")
# m1_educ <- svyMER(m1w, "educ", seed = 2022,
#                     design = tra_svy_r, modform = m1form, weightvar = "weight")
# 
# m1_region %>% plot() + 
#   geom_hline(yintercept = .5, linetype = "dotted") +
#   scale_y_continuous(limits = c(0,1), labels = scales::percent)
# m1_gender %>% plot() + 
#   geom_hline(yintercept = .5, linetype = "dotted") +
#   scale_y_continuous(limits = c(0,1), labels = scales::percent)
# m1_agegrp %>% plot() + 
#   geom_hline(yintercept = .5, linetype = "dotted") +
#   scale_y_continuous(limits = c(0,1), labels = scales::percent)
# m1_educ %>% plot() + 
#   geom_hline(yintercept = .5, linetype = "dotted") +
#   scale_y_continuous(limits = c(0,1), labels = scales::percent)
```


```{r m1 effects, cache = TRUE}
library(svyEffects)

m1_region <- svyAME(m1w, "region", seed = 2022,
                    design = tra_svy_r, modform = m1form, weightvar = "weight")
m1_gender <- svyAME(m1w, "gender", seed = 2022,
                    design = tra_svy_r, modform = m1form, weightvar = "weight")
m1_agegrp <- svyAME(m1w, "agegrp", seed = 2022,
                    design = tra_svy_r, modform = m1form, weightvar = "weight")
m1_educ <- svyAME(m1w, "educ", seed = 2022,
                    design = tra_svy_r, modform = m1form, weightvar = "weight")
```


```{r m1 graphs, cache = TRUE}
m1_region %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent)
m1_gender %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent)
m1_agegrp %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent)
m1_educ %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent)
```


## Values and beliefs

```{r}
(mnlSig(m2w)) %>% 
  kable(caption = "Model 3 - Values and Beliefs") %>%
  footnote(general = "Cell entires are multinomial logit coefficients.", "*p<0.05.") %>%
  kable_classic(full_width = FALSE)
```

```{r, include = FALSE, eval = FALSE}
m2_relig <- svyMER(m2w, "relig", seed = 2022,
                   design = tra_svy_r, modform = m2form, weightvar = "weight")
m2_abidentity  <- svyMER(m2w, "abidentity", seed = 2022,
                    design = tra_svy_r, modform = m2form, weightvar = "weight")
m2_ideology <- svyMER(m2w, "ideology", seed = 2022,
                    design = tra_svy_r, modform = m2form, weightvar = "weight")

m2_f_economic <- svyMER(m2w, "f_economic", seed = 2022,
                    design = tra_svy_r, modform = m2form, weightvar = "weight")
m2_f_populism <- svyMER(m2w, "f_populism", seed = 2022,
                    design = tra_svy_r, modform = m2form, weightvar = "weight")
m2_f_western <- svyMER(m2w, "f_western", seed = 2022,
                    design = tra_svy_r, modform = m2form, weightvar = "weight")
m2_f_cultural <- svyMER(m2w, "f_cultural", seed = 2022,
                    design = tra_svy_r, modform = m2form, weightvar = "weight")
m2_f_energyenviro <- svyMER(m2w, "f_energyenviro", seed = 2022,
                    design = tra_svy_r, modform = m2form, weightvar = "weight")

m2_relig %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent) +
  labs(title = "Effect of religiosity on vote choice, Model 2")
m2_abidentity %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent) +
  labs(title = "Effect of regional attachment on vote choice, Model 2")
m2_ideology %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent) +
  labs(title = "Effect of left-right ideology on vote choice, Model 2")

m2_f_economic %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent) +
  labs(title = "Effect of economic conservatism on vote choice, Model 2")
m2_f_populism %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent) +
  labs(title = "Effect of populism on vote choice, Model 2")
m2_f_western %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent) +
  labs(title = "Effect of western alienation on vote choice, Model 2")
m2_f_cultural %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent) +
  labs(title = "Effect of cultural conservatism values on vote choice, Model 2")
m2_f_energyenviro %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent) +
  labs(title = "Effect of energy>environment values on vote choice, Model 2")
```

```{r m2 effects, cache = TRUE}
m2_relig <- svyAME(m2w, "relig", seed = 2022,
                   design = tra_svy_r, modform = m2form, weightvar = "weight")
m2_abidentity  <- svyAME(m2w, "abidentity", seed = 2022,
                    design = tra_svy_r, modform = m2form, weightvar = "weight")
m2_ideology <- svyAME(m2w, "ideology", seed = 2022,
                    design = tra_svy_r, modform = m2form, weightvar = "weight")

m2_f_economic <- svyAME(m2w, "f_economic", seed = 2022,
                    design = tra_svy_r, modform = m2form, weightvar = "weight")
m2_f_populism <- svyAME(m2w, "f_populism", seed = 2022,
                    design = tra_svy_r, modform = m2form, weightvar = "weight")
m2_f_western <- svyAME(m2w, "f_western", seed = 2022,
                    design = tra_svy_r, modform = m2form, weightvar = "weight")
m2_f_cultural <- svyAME(m2w, "f_cultural", seed = 2022,
                    design = tra_svy_r, modform = m2form, weightvar = "weight")
m2_f_energyenviro <- svyAME(m2w, "f_energyenviro", seed = 2022,
                    design = tra_svy_r, modform = m2form, weightvar = "weight")
```


```{r m2 graphs, cache = TRUE}
m2_relig %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent) +
  labs(title = "Effect of religiosity on vote choice, Model 2")
m2_abidentity %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent) +
  labs(title = "Effect of regional attachment on vote choice, Model 2")
m2_ideology %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent) +
  labs(title = "Effect of left-right ideology on vote choice, Model 2")

m2_f_economic %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent) +
  labs(title = "Effect of economic conservatism on vote choice, Model 2")
m2_f_populism %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent) +
  labs(title = "Effect of populism on vote choice, Model 2")
m2_f_western %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent) +
  labs(title = "Effect of western alienation on vote choice, Model 2")
m2_f_cultural %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent) +
  labs(title = "Effect of cultural conservatism values on vote choice, Model 2")
m2_f_energyenviro %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent) +
  labs(title = "Effect of energy>environment values on vote choice, Model 2")
```


## Values and beliefs in the full model

```{r m2full effects, cache = TRUE}
library(svyEffects)
m4_relig <- svyAME(m4w, "relig", seed = 2022,
                   design = tra_svy_r, modform = m4form, weightvar = "weight")
m4_abidentity  <- svyAME(m4w, "abidentity", seed = 2022,
                    design = tra_svy_r, modform = m4form, weightvar = "weight")
m4_ideology <- svyAME(m4w, "ideology", seed = 2022,
                    design = tra_svy_r, modform = m4form, weightvar = "weight")

m4_f_economic <- svyAME(m4w, "f_economic", seed = 2022,
                    design = tra_svy_r, modform = m4form, weightvar = "weight")
m4_f_populism <- svyAME(m4w, "f_populism", seed = 2022,
                    design = tra_svy_r, modform = m4form, weightvar = "weight")
m4_f_western <- svyAME(m4w, "f_western", seed = 2022,
                    design = tra_svy_r, modform = m4form, weightvar = "weight")
m4_f_cultural <- svyAME(m4w, "f_cultural", seed = 2022,
                    design = tra_svy_r, modform = m4form, weightvar = "weight")
m4_f_energyenviro <- svyAME(m4w, "f_energyenviro", seed = 2022,
                    design = tra_svy_r, modform = m4form, weightvar = "weight")
```


```{r m2full graphs, cache = TRUE}
m4_relig %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent) +
  labs(title = "Effect of religiosity on vote choice, Model 4")
m4_abidentity %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent) +
  labs(title = "Effect of regional attachment on vote choice, Model 4")
m4_ideology %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent) +
  labs(title = "Effect of left-right ideology on vote choice, Model 4")

m4_f_economic %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent) +
  labs(title = "Effect of economic conservatism on vote choice, Model 4")
m4_f_populism %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent) +
  labs(title = "Effect of populism on vote choice, Model 4")
m4_f_western %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent) +
  labs(title = "Effect of western alienation on vote choice, Model 4")
m4_f_cultural %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent) +
  labs(title = "Effect of cultural conservatism values on vote choice, Model 4")
m4_f_energyenviro %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent) +
  labs(title = "Effect of energy>environment values on vote choice, Model 4")
```


## Issues

```{r}
(mnlSig(m3w)) %>% 
  kable(caption = "Model 1 - Issues") %>%
  footnote(general = "Cell entires are multinomial logit coefficients.", "*p<0.05.") %>%
  kable_classic(full_width = FALSE)
```


```{r m3 effects, cache = TRUE}
m3_c19_prov <- svyAME(m3w, "c19_prov", seed = 2022,
                    design = tra_svy_r, modform = m3form, weightvar = "weight")
m3_c19_toostrict <- svyAME(m3w, "c19_toostrict", seed = 2022,
                    design = tra_svy_r, modform = m3form, weightvar = "weight")
m3_abseparate <- svyAME(m3w, "abseparate", seed = 2022,
                    design = tra_svy_r, modform = m3form, weightvar = "weight")
```


```{r m3 graphs, cache = TRUE}
m3_c19_prov %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent) +
  labs(title = "Effect of satisfaction with AB COVID response on vote choice, Model 3")
m3_c19_toostrict %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent) +
  labs(title = "Effect of 'too strict?' on vote choice, Model 3")
m3_abseparate %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent) +
  labs(title = "Effect of separatism on vote choice, Model 3")
```

## Leadership

```{r}
(mnlSig(m4w)) %>% 
  kable(caption = "Model 1 - Leadership") %>%
  footnote(general = "Cell entires are multinomial logit coefficients.", "*p<0.05.") %>%
  kable_classic(full_width = FALSE)
```


```{r m4 effects, cache = TRUE}
m4_smith <- svyAME(m4w, "smith", seed = 2022,
                    design = tra_svy_r, modform = m4form, weightvar = "weight")
m4_notley <- svyAME(m4w, "notley", seed = 2022,
                    design = tra_svy_r, modform = m4form, weightvar = "weight")
```


```{r m4 graphs, cache = TRUE}
m4_notley %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent) +
  scale_x_continuous(limits = c(0,10), breaks = c(0,2,4,6,8,10)) +
  labs(title = "Effect of Notley ratings on vote choice, Model 4")
m4_smith %>% plot() + 
  geom_hline(yintercept = .5, linetype = "dotted") +
  scale_y_continuous(limits = c(0,1), labels = scales::percent) +
  scale_x_continuous(limits = c(0,10), breaks = c(0,2,4,6,8,10)) +
  labs(title = "Effect of Smith ratings on vote choice, Model 4")
```





```{r assembling effects summary table, include = FALSE, eval = FALSE}

getDiffs <- function(obj, refcat, ...) {
  
  out <- obj$diffs %>%
    dplyr::mutate(Sig = case_when(conf.low * conf.high > 0 ~ "*")) %>%
    dplyr::rename(varname = 2) %>%
    dplyr::filter(str_detect(varname, refcat)) %>%
    dplyr::select(-c("conf.low", "conf.high", "type"))
  
  # if(!is.null(modname)) out <- out %>% dplyr::mutate(Model = modname)
  
  return(out)
}

getDiffs(m1_region, refcat = "Calgary")


block1m1 <- list(m1_region, m1_gender, m1_agegrp, m1_educ)
names(block1m1) <- c("Calgary", "Male", "45-64", "Some PSE")
block1m1_diffs <- lapply(1:length(m1ames), function(i)
  getDiffs(block1m1[[i]], refcat = names(block1m1)[[i]]))

# block1m2 <- list(m2_region, m2_gender, m2_agegrp, m2_educ)
# names(block1m2) <- c("Calgary", "Male", "45-64", "Some PSE")
# block1m2_diffs <- lapply(1:length(block1m2), function(i)
#   getDiffs(block1m2[[i]], refcat = names(block1m2)[[i]]))
# 
# block1m3 <- list(m3_region, m3_gender, m3_agegrp, m3_educ)
# names(block1m3) <- c("Calgary", "Male", "45-64", "Some PSE")
# block1m3_diffs <- lapply(1:length(block1m3), function(i)
#   getDiffs(block1m3[[i]], refcat = names(block1m3)[[i]]))
# 
# block1m4 <- list(m4_region, m4_gender, m4_agegrp, m4_educ)
# names(block1m4) <- c("Calgary", "Male", "45-64", "Some PSE")
# block1m4_diffs <- lapply(1:length(block1m4), function(i)
#   getDiffs(block1m4[[i]], refcat = names(block1m4)[[i]]))


```




```{r regional vote choice}
# ## A closer look at poor predictions
# 
# To help discriminate between the camps *within* a party, I've separated out the "soft" supporters (operationalized as those for whom the model assigns a predicted probability outside of 95%). This will also come in handy in looking at how the ground could further shift.
# 
# Two things stand out. First, there are more within the UCP than the NDP. Second, Soft NDP supporters rate Notley higher than Soft UCP # supporters rate Smith.
# m4df <- model.frame(m4)
# m4df$pred <- m4$fitted.values 
# m4df <- m4df %>%
#   mutate(votertype = case_when(pred < .05 ~ "UCP",
#                                pred > .05 & pred < .5 ~ "Soft UCP",
#                                pred > .5 & pred < .95 ~ "Soft NDP",
#                                pred > .95 ~ "NDP"))
# 
# library(DAMisc)
# table(m4df$votertype)
# table(m4df$votertype) %>% prop.table
# 
# sumStats(m4df, c("notley", "smith"), byvar = "votertype") %>%
#   arrange(variable) %>%
#   mutate(se = mean / sqrt(n),
#          lower95 = mean - (1.96 * se),
#          upper95 = mean + (1.96 * se)) %>%
#   ggplot() +
#   aes(x = votertype, y = mean, ymin = lower95, ymax = upper95, colour = variable) +
#   geom_pointrange(position = position_dodge2(.3)) + 
#   labs(title = "Average leader rating by voter type",
#        caption = "Source: 2022 CBC Calgary - The Road Ahead Survey",
#        x = "Voter type",
#        y = "Average leader rating",
#        colour = "Leader")
#   
```


```{r, include = FALSE, eval = FALSE}
# ggplot(m4df) +
#   aes(x = notley, fill = votertype, colour = votertype) +
#   geom_density(alpha = .5) 
# ggplot(m4df) +
#   aes(x = smith, fill = votertype, colour = votertype) +
#   geom_density(alpha = .5) 
# 
# ggplot(m4df) +
#   aes(y = votertype, x = smith) +
#   geom_point(alpha = .5, position = position_jitter(.5)) 


# stargazer(cal_m3, edm_m3, oth_m3, 
#           no.space = TRUE,
#           column.labels = c("Calgary", "Edmonton", "Other AB"),
#           # header = FALSE, 
#           # align = TRUE,
#           type = "html")
# In Model 3, COVID matters everywhere. In Calgary is about the government's response in general, but in Edmonton and outside the cities, it's specifically about how strict the restrictions were.
# 
# stargazer(cal_m4, edm_m4, oth_m4, 
#           no.space = TRUE,
#           column.labels = c("Calgary", "Edmonton", "Other AB"),
#           # header = FALSE, 
#           # align = TRUE,
#           type = "html")
# Leadership matters everywhere. However, this is more of the case outside of the cities than in Calgary or Edmonton.

```


